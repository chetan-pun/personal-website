{"ast":null,"code":"var _jsxFileName = \"/Users/chetanpun/Desktop/task/src/components/jokes.js\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport clsx from \"clsx\";\nimport useLazyLoad from \"./useLazyLoad.js\";\nimport Card from './card.js';\nimport Loading from './loading.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Jokes = _ref => {\n  _s();\n\n  let {\n    jokes\n  } = _ref;\n  const NUM_PER_PAGE = 6;\n  const TOTAL_PAGES = Math.ceil(jokes.results.length() / NUM_PER_PAGE);\n  const alljokes = jokes.result;\n  const triggerRef = useRef(null);\n\n  const onGrabData = currentPage => {\n    // This would be where you'll call your API\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const data = alljokes.slice((currentPage - 1) % TOTAL_PAGES * NUM_PER_PAGE, NUM_PER_PAGE * (currentPage % TOTAL_PAGES));\n        console.log(data);\n        resolve(data);\n      }, 3000);\n    });\n  };\n\n  const {\n    data,\n    loading\n  } = useLazyLoad({\n    triggerRef,\n    onGrabData\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 content-start\",\n      children: data.map(image => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          owner: image[\"owner\"],\n          imageUrl: image[\"imageUrl\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: triggerRef,\n      className: clsx(\"trigger\", {\n        visible: loading\n      }),\n      children: /*#__PURE__*/_jsxDEV(LoadingPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Jokes, \"TCE5UcuxmQZy9ZVatE/nUMZvZxo=\", false, function () {\n  return [useLazyLoad];\n});\n\n_c = Jokes;\nexport default Jokes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Jokes\");","map":{"version":3,"names":["useRef","clsx","useLazyLoad","Card","Loading","Jokes","jokes","NUM_PER_PAGE","TOTAL_PAGES","Math","ceil","results","length","alljokes","result","triggerRef","onGrabData","currentPage","Promise","resolve","setTimeout","data","slice","console","log","loading","map","image","visible"],"sources":["/Users/chetanpun/Desktop/task/src/components/jokes.js"],"sourcesContent":["\nimport { useRef } from \"react\";\nimport clsx from \"clsx\";\nimport useLazyLoad from \"./useLazyLoad.js\";\nimport Card  from './card.js';\nimport  Loading  from './loading.js';\n\n\n\n\nconst Jokes = ({jokes}) => {\n    const NUM_PER_PAGE = 6;\n    const TOTAL_PAGES = Math.ceil(jokes.results.length()/NUM_PER_PAGE);\n    const alljokes = jokes.result;\n    const triggerRef = useRef(null);\n    const onGrabData = (currentPage) => {\n        // This would be where you'll call your API\n        return new Promise((resolve) => {\n        setTimeout(() => {\n            const data = alljokes.slice(\n            ((currentPage - 1)%TOTAL_PAGES) * NUM_PER_PAGE,\n            NUM_PER_PAGE * (currentPage%TOTAL_PAGES)\n            );\n            console.log(data);\n            resolve(data);\n        }, 3000);\n        });\n    };\n    const { data, loading } = useLazyLoad({ triggerRef, onGrabData });\n    return (\n        <>\n        <div className=\"grid grid-cols-3 gap-4 content-start\">\n        {data.map(image => {\n            return <Card owner={image[\"owner\"]} imageUrl={image[\"imageUrl\"]} />\n        })}\n        </div>\n        <div ref={triggerRef} className={clsx(\"trigger\", { visible: loading })}>\n            <LoadingPosts />\n        </div>\n        </>\n    );\n}\n\nexport default Jokes;"],"mappings":";;;AACA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAkB,WAAlB;AACA,OAAQC,OAAR,MAAsB,cAAtB;;;;AAKA,MAAMC,KAAK,GAAG,QAAa;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EACvB,MAAMC,YAAY,GAAG,CAArB;EACA,MAAMC,WAAW,GAAGC,IAAI,CAACC,IAAL,CAAUJ,KAAK,CAACK,OAAN,CAAcC,MAAd,KAAuBL,YAAjC,CAApB;EACA,MAAMM,QAAQ,GAAGP,KAAK,CAACQ,MAAvB;EACA,MAAMC,UAAU,GAAGf,MAAM,CAAC,IAAD,CAAzB;;EACA,MAAMgB,UAAU,GAAIC,WAAD,IAAiB;IAChC;IACA,OAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;MAChCC,UAAU,CAAC,MAAM;QACb,MAAMC,IAAI,GAAGR,QAAQ,CAACS,KAAT,CACZ,CAACL,WAAW,GAAG,CAAf,IAAkBT,WAAnB,GAAkCD,YADrB,EAEbA,YAAY,IAAIU,WAAW,GAACT,WAAhB,CAFC,CAAb;QAIAe,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACAF,OAAO,CAACE,IAAD,CAAP;MACH,CAPS,EAOP,IAPO,CAAV;IAQC,CATM,CAAP;EAUH,CAZD;;EAaA,MAAM;IAAEA,IAAF;IAAQI;EAAR,IAAoBvB,WAAW,CAAC;IAAEa,UAAF;IAAcC;EAAd,CAAD,CAArC;EACA,oBACI;IAAA,wBACA;MAAK,SAAS,EAAC,sCAAf;MAAA,UACCK,IAAI,CAACK,GAAL,CAASC,KAAK,IAAI;QACf,oBAAO,QAAC,IAAD;UAAM,KAAK,EAAEA,KAAK,CAAC,OAAD,CAAlB;UAA6B,QAAQ,EAAEA,KAAK,CAAC,UAAD;QAA5C;UAAA;UAAA;UAAA;QAAA,QAAP;MACH,CAFA;IADD;MAAA;MAAA;MAAA;IAAA,QADA,eAMA;MAAK,GAAG,EAAEZ,UAAV;MAAsB,SAAS,EAAEd,IAAI,CAAC,SAAD,EAAY;QAAE2B,OAAO,EAAEH;MAAX,CAAZ,CAArC;MAAA,uBACI,QAAC,YAAD;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QANA;EAAA,gBADJ;AAYH,CA/BD;;GAAMpB,K;UAkBwBH,W;;;KAlBxBG,K;AAiCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}