{"ast":null,"code":"var _jsxFileName = \"/Users/chetanpun/Desktop/task/src/context/searchProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState, useContext, createContext } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet SearchContext = /*#__PURE__*/createContext();\nexport function useSearch() {\n  _s();\n\n  return useContext(SearchContext);\n}\n\n_s(useSearch, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nlet SearchProvider = _ref => {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  let [jokes, setJokes] = useState([]);\n  let [jokeType, setJokeType] = useState('adult');\n\n  let setJoketype = type => setJokeType(type);\n\n  let handleSearch = async search => {\n    await axios.get(`https://api.chucknorris.io/jokes/search?query=${search}`).then(re => {\n      setJokeType(search);\n      setJokes(re.data);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(SearchContext.Provider, {\n    value: {\n      jokes,\n      handleSearch,\n      jokeType\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s2(SearchProvider, \"adHeJ1fcrNGbDDxFeGkLzsKv5Js=\");\n\n_c = SearchProvider;\nexport default SearchProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchProvider\");","map":{"version":3,"names":["useState","useContext","createContext","axios","SearchContext","useSearch","SearchProvider","children","jokes","setJokes","jokeType","setJokeType","setJoketype","type","handleSearch","search","get","then","re","data"],"sources":["/Users/chetanpun/Desktop/task/src/context/searchProvider.js"],"sourcesContent":["import { useState,useContext,createContext } from \"react\";\nimport axios from 'axios';\n\n\nlet SearchContext = createContext();\n\n\n\nexport function useSearch (){\n    return  useContext(SearchContext);\n}\n\n\nlet SearchProvider = ({children})=>{\n\n    let [jokes,setJokes] = useState([]);\n    let [jokeType,setJokeType] = useState('adult');\n    \n    let setJoketype = (type) => setJokeType(type);\n    \n    let handleSearch = async(search) =>{\n        await axios.get(`https://api.chucknorris.io/jokes/search?query=${search}`)\n        .then((re)=>{\n            setJokeType(search);\n            setJokes(re.data);\n        })\n     }\n\n\n    return(\n         <SearchContext.Provider value = {{jokes,handleSearch,jokeType}} >\n             {children}\n         </SearchContext.Provider>\n    )\n\n}\n\nexport default SearchProvider;"],"mappings":";;;;AAAA,SAASA,QAAT,EAAkBC,UAAlB,EAA6BC,aAA7B,QAAkD,OAAlD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,IAAIC,aAAa,gBAAGF,aAAa,EAAjC;AAIA,OAAO,SAASG,SAAT,GAAqB;EAAA;;EACxB,OAAQJ,UAAU,CAACG,aAAD,CAAlB;AACH;;GAFeC,S;;AAKhB,IAAIC,cAAc,GAAG,QAAc;EAAA;;EAAA,IAAb;IAACC;EAAD,CAAa;EAE/B,IAAI,CAACC,KAAD,EAAOC,QAAP,IAAmBT,QAAQ,CAAC,EAAD,CAA/B;EACA,IAAI,CAACU,QAAD,EAAUC,WAAV,IAAyBX,QAAQ,CAAC,OAAD,CAArC;;EAEA,IAAIY,WAAW,GAAIC,IAAD,IAAUF,WAAW,CAACE,IAAD,CAAvC;;EAEA,IAAIC,YAAY,GAAG,MAAMC,MAAN,IAAgB;IAC/B,MAAMZ,KAAK,CAACa,GAAN,CAAW,iDAAgDD,MAAO,EAAlE,EACLE,IADK,CACCC,EAAD,IAAM;MACRP,WAAW,CAACI,MAAD,CAAX;MACAN,QAAQ,CAACS,EAAE,CAACC,IAAJ,CAAR;IACH,CAJK,CAAN;EAKF,CANF;;EASA,oBACK,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAI;MAACX,KAAD;MAAOM,YAAP;MAAoBJ;IAApB,CAAjC;IAAA,UACKH;EADL;IAAA;IAAA;IAAA;EAAA,QADL;AAMH,CAtBD;;IAAID,c;;KAAAA,c;AAwBJ,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}